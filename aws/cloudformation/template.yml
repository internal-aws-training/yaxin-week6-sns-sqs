AWSTemplateFormatVersion: 2010-09-09
Description: aws-sns-sds-dojo
Parameters:
    TriggerRuleName:
        Description: Trigger Rule Name
        Default: trigger-event-rules
        Type: String

Resources:
    MySNSTopic:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: MyAlarmSNSTopic
          Subscription:
            - Endpoint: yxwang@thoughtworks.com
              Protocol: email
            - Endpoint: !GetAtt MySQSQueue.Arn
              Protocol: sqs
          TopicName: "MySNSTopicName"

    MySNSPolicy:    
        Type: AWS::SNS::TopicPolicy
        Properties:
            PolicyDocument:
                Id: MyTopicPolicy
                Version: '2012-10-17'
                Statement:
                    - Sid: My-statement-id
                      Effect: Allow
                      Principal:
                        AWS: "*"
                      Action: SNS:Publish
                      Resource: "*"
            Topics:
                - !Ref MySNSTopic

    MySQSQueue:
        Type: AWS::SQS::Queue
        Properties:
            QueueName: MySQSQueueName
            MessageRetentionPeriod: 604800 # 7days
            VisibilityTimeout: 300 # 5min
            RedrivePolicy: 
              deadLetterTargetArn: !GetAtt MyDeadLetterQueue.Arn
              maxReceiveCount: 5
    
    MyDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: MyDeadLetterQueueName

    MySQSPolicy: 
        Type: AWS::SQS::QueuePolicy
        Properties: 
            Queues: 
                - "https://sqs.ap-southeast-1.amazonaws.com/494526681395/MySQSQueueName"
            PolicyDocument: 
                Statement: 
                    - 
                        Action: 
                          - "SQS:SendMessage" 
                          - "SQS:ReceiveMessage"
                        Effect: "Allow"
                        Resource: "arn:aws:sqs:ap-southeast-1:494526681395:MySQSQueueName"
                        Principal:  
                          AWS: 
                            - "*"   

    MyRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: MyRoleName
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Effect: Allow
                    Principal:
                        Service:
                          - lambda.amazonaws.com
                    Action:
                        - sts:AssumeRole
            Policies:
                - PolicyName: LambdaLogPolicy
                  PolicyDocument:
                    Version: 2012-10-17
                    Statement:
                        - Effect: Allow
                          Action:
                            - logs:*
                          Resource:
                            - arn:aws:logs:*:*:*
                - PolicyName: LambdaSQSPolicy
                  PolicyDocument:
                    Version: 2012-10-17
                    Statement:
                        - Effect: Allow
                          Action:
                            - sqs:*
                          Resource:
                            - !GetAtt MySQSQueue.Arn

    MyLambda:
        Type: AWS::Lambda::Function
        Properties:
            FunctionName: MyLambdaName
            Role: !GetAtt MyRole.Arn
            Handler: src/index.handler
            Runtime: nodejs12.x
            Code:
                S3Bucket: lambda-metrics-bucket-yaxin
                S3Key: sns-sds-dojo.zip
            MemorySize: 128
            Timeout: 3  
    
    MyLambdaEventSourceMapping:
        Type: AWS::Lambda::EventSourceMapping
        Properties:
            EventSourceArn: !GetAtt MySQSQueue.Arn
            FunctionName: !Ref MyLambda

    SNSScheduleTriggerRule:
        Type: AWS::Events::Rule
        Properties:
          ScheduleExpression: cron(0/1 * * * ? *) #todo 5min
          Targets:
            - Id: !Ref TriggerRuleName
              Arn: !Ref MySNSTopic




